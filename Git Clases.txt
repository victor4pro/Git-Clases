git reset "#log" --hard (Vuelve a la version pero no guarda con los que esté en el staging area)

git reset "#log" --soft (Vuelve a la versión anterior guardando los que esté en staging area preparado así para algún commit)

ls -al (Veo todos los archivos incluso los archivos que están ocultos)

git log --stat (Veo los cambios por logs, cuales archivos se crearon y cuantos bytes nuevos se agregaron)

git checkout "#log" "NombreArchivo" (Veo cierto archivo en algún status anterior)

git checkout master "NombreArchivo" (Vuelvo el archivo a la ultima versión de log)

git rm --cached: Elimina los archivos del área de Staging y del próximo commit pero los mantiene en nuestro disco duro.

git rm --force: Elimina los archivos de Git y del disco duro. Git siempre guarda todo, por lo que podemos acceder al registro de la existencia de los archivos, de modo que podremos recuperarlos si es necesario (pero debemos usar comandos más avanzados).

git reset HEAD: Este es el comando para sacar archivos del área de Staging. No para borrarlos ni nada de eso, solo para que los últimos cambios de estos archivos no se envíen al último commit, a menos que cambiemos de opinión y los incluyamos de nuevo en staging con git add, por supuesto.

git stash (Graba el status del directorio actual pero quieres volver a otro estado previo de los archivos)

git restore "FileName" (Descarta los cambios hechos en el archivo antes del próximo commit)

git push (Hacer commit pero repositorio remoto)

git fetch (Trae al repositorio local desde el servidor, pero no lo copia en mis archivos)

git merge (Después de ahcer fetch tengo que fusionar con mi archivo de forma local)

git pull (es merge+fetch a la misma vez)